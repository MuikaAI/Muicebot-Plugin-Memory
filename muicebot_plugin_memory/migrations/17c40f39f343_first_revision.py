"""first revision

迁移 ID: 17c40f39f343
父迁移:
创建时间: 2025-06-25 22:05:13.219565

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = "17c40f39f343"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ("muicebot-plugin-memory",)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "muicebot_plugin_memory_conversationsummary",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("content", sa.String(), nullable=False, comment="笔记内容"),
        sa.Column("userid", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_muicebot_plugin_memory_conversationsummary")
        ),
        info={"bind_key": "muicebot_plugin_memory"},
    )
    op.create_table(
        "muicebot_plugin_memory_memorymetric",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("userid", sa.String(), nullable=False),
        sa.Column(
            "content", sa.String(), nullable=False, comment="记忆内容(即用户输入)"
        ),
        sa.Column("arousal", sa.Float(), nullable=False, comment="唤醒程度"),
        sa.Column(
            "llm_importance", sa.Float(), nullable=False, comment="LLM评估的重要性"
        ),
        sa.Column("r1_count", sa.Integer(), nullable=False, comment="第一相关记忆计数"),
        sa.Column("r2_count", sa.Integer(), nullable=False, comment="第二相关记忆计数"),
        sa.Column(
            "session_interval",
            sa.Integer(),
            nullable=False,
            comment="至最后一次检索以来经过的会话数Δt",
        ),
        sa.Column(
            "total_retrieval_count",
            sa.Integer(),
            nullable=False,
            comment="总共被检索的次数S",
        ),
        sa.Column("retained", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_muicebot_plugin_memory_memorymetric")
        ),
        info={"bind_key": "muicebot_plugin_memory"},
    )
    op.create_table(
        "muicebot_plugin_memory_userprofile",
        sa.Column("user_id", sa.String(length=64), nullable=False, comment="用户ID"),
        sa.Column("key_memory", sa.Text(), nullable=False, comment="关键记忆"),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "user_id", name=op.f("pk_muicebot_plugin_memory_userprofile")
        ),
        info={"bind_key": "muicebot_plugin_memory"},
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("muicebot_plugin_memory_userprofile")
    op.drop_table("muicebot_plugin_memory_memorymetric")
    op.drop_table("muicebot_plugin_memory_conversationsummary")
    # ### end Alembic commands ###
